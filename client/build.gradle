apply from: '../config.gradle'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    def ext = rootProject.extensions.ext

    compileSdkVersion ext.android.compileSdk

    defaultConfig {
        applicationId 'com.github.ai.fprovider.client'
        minSdkVersion ext.android.minSdk
        targetSdkVersion ext.android.targetSdk
        versionCode ext.version.versionCode
        versionName ext.version.versionName
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary true
        multiDexEnabled true
    }

    buildFeatures {
        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    signingConfigs {
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    lintOptions {
        checkReleaseBuilds true
        abortOnError false
    }

    composeOptions {
        kotlinCompilerExtensionVersion "$kotlinCompilerApiVersion"
    }
}

dependencies {
    implementation project(":internal-storage-file-provider")

    // MultiDex
    implementation "androidx.multidex:multidex:$multidexVersion"

    // DI
    implementation "io.insert-koin:koin-android:$koinVersion"
    implementation "io.insert-koin:koin-core:$koinVersion"
    implementation "io.insert-koin:koin-androidx-viewmodel:$koinVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    // Lifecycle libraries
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"

    // AndroidX libraries
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$androidXVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.annotation:annotation:$annotationsVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    // Android KTX
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-core-ktx:$lifecycleVersion"
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Compose
    implementation "androidx.activity:activity-compose:$activityComposeVersion"
    implementation "androidx.compose.material:material:$composeVersion"
    implementation "androidx.compose.ui:ui-tooling:$composeVersion"
    implementation "androidx.compose.runtime:runtime-livedata:$composeVersion"
    implementation "androidx.constraintlayout:constraintlayout-compose:$constrainLayoutComposeVersion"

    //Cicerone
    implementation "com.github.terrakok:cicerone:$ciceroneVersion"
}
